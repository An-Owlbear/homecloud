// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package persistence

import (
	"context"
	"database/sql"
)

const createApp = `-- name: CreateApp :exec
INSERT INTO apps (id, schema, date_added)
VALUES (?1, jsonb(?2), unixepoch())
`

type CreateAppParams struct {
	ID     string
	Schema interface{}
}

func (q *Queries) CreateApp(ctx context.Context, arg CreateAppParams) error {
	_, err := q.db.ExecContext(ctx, createApp, arg.ID, arg.Schema)
	return err
}

const removeApp = `-- name: RemoveApp :execresult
DELETE FROM apps where id = ?
`

func (q *Queries) RemoveApp(ctx context.Context, id string) (sql.Result, error) {
	return q.db.ExecContext(ctx, removeApp, id)
}

const updateApp = `-- name: UpdateApp :exec
UPDATE apps SET schema = jsonb(?1)
WHERE id = ?2
`

type UpdateAppParams struct {
	Schema interface{}
	ID     string
}

func (q *Queries) UpdateApp(ctx context.Context, arg UpdateAppParams) error {
	_, err := q.db.ExecContext(ctx, updateApp, arg.Schema, arg.ID)
	return err
}

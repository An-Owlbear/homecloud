// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: invite_codes.sql

package persistence

import (
	"context"
)

const checkInviteCode = `-- name: CheckInviteCode :one
SELECT CAST(EXISTS(SELECT 1 FROM invite_codes WHERE code = ?1) as BOOLEAN)
`

func (q *Queries) CheckInviteCode(ctx context.Context, code string) (bool, error) {
	row := q.db.QueryRowContext(ctx, checkInviteCode, code)
	var column_1 bool
	err := row.Scan(&column_1)
	return column_1, err
}

const createInviteCode = `-- name: CreateInviteCode :one
INSERT INTO invite_codes (code, expiry_date)
VALUES (hex(randomblob(16)), unixepoch() + ?1 * 3600)
RETURNING code, expiry_date
`

func (q *Queries) CreateInviteCode(ctx context.Context, hours interface{}) (InviteCode, error) {
	row := q.db.QueryRowContext(ctx, createInviteCode, hours)
	var i InviteCode
	err := row.Scan(&i.Code, &i.ExpiryDate)
	return i, err
}

const getInviteCode = `-- name: GetInviteCode :one
SELECT code, expiry_date FROM invite_codes
WHERE code = ?1
`

func (q *Queries) GetInviteCode(ctx context.Context, code string) (InviteCode, error) {
	row := q.db.QueryRowContext(ctx, getInviteCode, code)
	var i InviteCode
	err := row.Scan(&i.Code, &i.ExpiryDate)
	return i, err
}

const removeInviteCode = `-- name: RemoveInviteCode :exec
DELETE FROM invite_codes WHERE code = ?1
`

func (q *Queries) RemoveInviteCode(ctx context.Context, code string) error {
	_, err := q.db.ExecContext(ctx, removeInviteCode, code)
	return err
}

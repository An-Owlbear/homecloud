// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: invite_codes.sql

package persistence

import (
	"context"
	"time"
)

const checkInviteCode = `-- name: CheckInviteCode :one
SELECT CAST(EXISTS(SELECT 1 FROM invite_codes WHERE code = ?1) as BOOLEAN)
`

func (q *Queries) CheckInviteCode(ctx context.Context, code string) (bool, error) {
	row := q.db.QueryRowContext(ctx, checkInviteCode, code)
	var column_1 bool
	err := row.Scan(&column_1)
	return column_1, err
}

const createInviteCode = `-- name: CreateInviteCode :one
INSERT INTO invite_codes (code, expiry_date, roles)
VALUES (hex(randomblob(16)), unixepoch() + ?1 * 3600, jsonb(?2))
RETURNING code, expiry_date
`

type CreateInviteCodeParams struct {
	Hours     interface{} `json:"hours"`
	Rolesjson interface{} `json:"rolesjson"`
}

type CreateInviteCodeRow struct {
	Code       string    `json:"code"`
	ExpiryDate time.Time `json:"expiry_date"`
}

func (q *Queries) CreateInviteCode(ctx context.Context, arg CreateInviteCodeParams) (CreateInviteCodeRow, error) {
	row := q.db.QueryRowContext(ctx, createInviteCode, arg.Hours, arg.Rolesjson)
	var i CreateInviteCodeRow
	err := row.Scan(&i.Code, &i.ExpiryDate)
	return i, err
}

const getInviteCode = `-- name: GetInviteCode :one
SELECT code, expiry_date, CAST(json(roles) AS TEXT) as roles FROM invite_codes
WHERE code = ?1
`

type GetInviteCodeRow struct {
	Code       string    `json:"code"`
	ExpiryDate time.Time `json:"expiry_date"`
	Roles      string    `json:"roles"`
}

func (q *Queries) GetInviteCode(ctx context.Context, code string) (GetInviteCodeRow, error) {
	row := q.db.QueryRowContext(ctx, getInviteCode, code)
	var i GetInviteCodeRow
	err := row.Scan(&i.Code, &i.ExpiryDate, &i.Roles)
	return i, err
}

const removeInviteCode = `-- name: RemoveInviteCode :exec
DELETE FROM invite_codes WHERE code = ?1
`

func (q *Queries) RemoveInviteCode(ctx context.Context, code string) error {
	_, err := q.db.ExecContext(ctx, removeInviteCode, code)
	return err
}
